In this workshop, I learned more about inheritance and the ability to shadow member functions in a parent class from a child class using two keywords. In the header section of a module, virtual is used at the beginning of the parent class member function to indicate it will get passed down to the derived class. On the receiving end of the inheritance, "override" must be included toward the end of the derived class member function. This will come in handy for the I/O streams of BankAccount getting passed down to SavingsAccount. Also, for the destructors involved with inherited object. Also, I learned about creating a custom operator for the I/O streams which made it easier to understand how I/o streams work and made them easier to use. I found it to be seamless to manipulate the i/o stream which makes it easier for each object to its job. It opens up my view how creative you can be by creating custom function or operators.